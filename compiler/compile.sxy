
(use normalize-procs "passes/normalize_procs.sxy")
(use identify-procs "passes/identify_procs.sxy")
(use quote-all-literals "passes/quote_literals.sxy")
(use specify-implied-seq "passes/make_implied_seq_explicit.sxy")
(use remove-pointless-seq "passes/remove_pointless_seq.sxy") 
(use simplify-seq "passes/simplify_seq.sxy")
(use flatten-seq "passes/flatten_seq.sxy")

(lib () compile)

(def i 0)
(def proc-db (:))

(proc compile (form)
    (proc meow (label)
        (debug %($(set! i i.inc) $label @rest)))
    (meow 'BEGIN)
    (def np (normalize-procs form))
    (meow 'norm-proc np)
    (def ip (identify-procs np proc-db)) ; mutate!
    (meow 'id-proc ip)
    (debug proc-db)
    (def qal (quote-all-literals ip))
    (meow 'quote-lits qal)
    (def siq (specify-implied-seq qal))
    (meow 'specify-seq siq)
    (def rps (remove-pointless-seq siq))
    (meow 'remove-dumb-seqs rps)
    (def ss  (simplify-seq rps))
    (meow 'simplify-seq ss)
    (def fs  (flatten-seq ss))
    (meow 'flat-seq fs)
    (def ss2  (simplify-seq fs)) ; resimplify after flattening
    (meow 'simplify-seq2 ss2)
    ss2)
