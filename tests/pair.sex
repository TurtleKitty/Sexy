
(def empty '())
(def ys (list 8 6 7 5 3 0 9))

(test 'pair-access (and? (= ys.0 8) (= ys.3 5) (= ys.6 9)))
(test 'pair-apply (= (ys 5) 0)) 

(test 'pair-type        (= ys.type 'pair))
(test 'pair-null        (= empty.null? true))
(test 'pair-not-null    (= ys.null? false))
(test 'pair-view        (= ys.view '(8 6 7 5 3 0 9)))
(test 'pair-false       (= empty.to-bool false))
(test 'pair-true        (= ys.to-bool true))
(test 'pair-head        (= ys.head 8))
(test 'pair-tail        (= ys.tail '(6 7 5 3 0 9)))
(test 'pair-len         (= ys.len 7))
(test 'pair-has?        (= (ys.has? 7) true))
(test 'pair-has?-not    (= (ys.has? 4) false))

(test 'pair-fold    (= (ys.fold 0 +) 38))
(test 'pair-foldr   (= (ys.foldr 0 +) 38))
(test 'pair-map     (= (ys.map (fn (x) (* 10 x))) '(80 60 70 50 30 0 90)))
(test 'pair-filter  (= (ys.filter (fn (x) (> x 5))) '(8 6 7 9)))
(test 'pair-sort-<    (= (ys.sort <) '(0 3 5 6 7 8 9)))
(test 'pair-sort->    (= (ys.sort >) '(9 8 7 6 5 3 0)))


